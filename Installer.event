

#ifndef FreeSpace 
#define FreeSpace 0x800000 // after 8 mb 
ORG FreeSpace 
#endif 

#include "C_code.lyn.event" 
#include "AsmHooks.lyn.event" 

#ifndef callHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
	#define callHackr1(offset) 			"BYTE $01 $49 $8E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
    #define jumpToHack(offset) "BYTE 0x00 0x4B 0x18 0x47; POIN (offset|0x1); PROTECT CURRENTOFFSET-8 CURRENTOFFSET-1"
#endif 

// [85CA938+0x34]? Cleanup campaign normal unit pointer 
// [85CA938+0x10]?

#include "MapPieces/GeneratedInstaller.event" 
ALIGN 4 
FrequencyOfObjects_Link:
WORD 100 // percent  
ALIGN 4 
NumberOfMapPieces:
WORD NumberOfMapPiecesDef
RandomizeMaps:
WORD 1 

PUSH 

ORG $77EF0 
callHackNew(GetPreEventPointerHook)
ORG $74584 
jumpToHack(GPE_2)
ORG $196d4  
callHackNew(UnitPointerHook)

ORG $21674 
callHackNew(MapSizeHook) 
ORG $216a0 
callHackNew(ReplaceMapHook) 

// 0x802CD28 start Co screen 
// starts proc 0x849aa6C - child proc 08616b74 

// 0x80849C8 

// $8084F44 
ORG $84BD8; callHackNew(DefaultPowCoPageHook)
// proc 8616BE4
// proc + 0x64 as bool redraw ? 
// check / do stuff if redraw ? 
// 0x8084BD4 
// 0x8084C14 
// 0x80852A8 

ORG $849BE 
SHORT $2003 // default 4th page 

//ORG $442AC; SHORT $2001 $4770 // always co power available
//ORG $44280; SHORT $2001 $4770 // always sco power available 

ORG $430D0 
SHORT $e01a // b 0x8043108 
//FILL($43108 - $430D0)
ORG $43108
callHackr1(GetClassAtt)
SHORT $46C0 $46C0 $46C0 


ORG $43140 
SHORT $e01a 
ORG $43178 
callHackr1(GetClassDef)
SHORT $46C0 $46C0 $46C0 

ORG $431B0
SHORT $e01a 
ORG $431E8
callHackr1(GetClassMov)
SHORT $46C0 $46C0 $46C0 

ORG $43220 
SHORT $e01a 
ORG $43258
callHackr1(GetClassRange)
SHORT $46C0 $46C0 $46C0 


POP 
#ifdef _AW2_ 

#endif 

