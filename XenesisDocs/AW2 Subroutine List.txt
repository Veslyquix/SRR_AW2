Bl dictionary

08000ED8 - Sets what day it is in the map editor
08003B8C - Random Map Generator subroutine
08005612 - Specific to DM Slot 1 to Save/Load
0800568E - Specific to DM Slot 2 to Save/Load
0800570A - Specific to DM Slot 3 to Save/Load
08016EC0 - Controls loading/saving of campaign map data stuff.

08017704 - Routine that subtracts battle maps points upon a purchase.

0801AAD8 - Checksum function - SRAM seems to get split into 0x1000 blocks.
0801208C - COP Palette Load?
080129E0 - RNG Subroutine
08013620 - Writes to Palette Ram loading area?

08017860 - Updates what palette has been loaded for a CO.
08017870 - Updates what palette has been stored for a CO.

080196FC - Routine for starting a game and placing units? Checks unit script for 0xFE/FF functions.
08019895 - Disables CO Powers (Scripting Subroutine)
08019B9A - controls input for design maps menu

0801A022 - Action Menu: Launches sub-menu code
0801A368 - Draws a display window background. Input of x start,y start, width, height r0-r3
0801AD70 - Main Load/Save subroutine

0801B120 - Subroutine. Loads Save Block IDs from 0200CC38..47 and stores them at 03007CE0..EF
						Returns with Save Type ID in R4, Save Block ID in R0
0801B2F6 - Seems to be subroutine that sets up which save areas are used.
0801B484 - Seems to AND the Data from 0xFEF to 0xFFF with the data 

0801C95C - Routine that stops currently playing music tracks?

0801F34C - Subroutine that draws OAM objects to display screen. Input: r0: Tile ID r1 X Position r2 Y Position r3 = 0 data at sp = 0x1
0801F888 - Subroutine that saves movement cost data for the current unit to 03003400. Input: r0 = Unit ID

0802150C - Subroutine that sets up all game initial settings
08022428 - Draws a unit on the map
08022618 - Routine that writes the BG2 tile for a unit to the Ram Map.
0802271C - General map indicator (Low Fuel Blink)

08023360 - Main graphics loader for gameplay.
080233BE - Loads static part of tileset.

08024630 - Sets transparency level for units when you hold B (0 to 16) on the map
080247A4 - Loads Map Pointer (Common Routine)
08024ABC - Damage Formula Calc subroutine (Input of pointers to battle RAM in r0 and r1)
08024C58 - Display Damage Formula Calc subroutine (input of pointers to battle RAM in r0 and r1)
08024c9E - Load Temp Offence
08024CA6 - Load Temp Defence
08024F20 - Damage Formula Main Routine

080250D2 - Compares if unit's HP is non-zero and branches otherwise. Branch to DC if nonzero. Runs in the order of defender -> attacker

080251D8 - Subroutine that sets up attack vs inventions/pipeseams/etc.
08025410 - Fuel Routine. Checks if unit is dived and moves fuel cost to 0x5

08025436 - Daily fuel consumption
0802547C - Has the unit run out of fuel?
0802562A - Affects whether a unit appears (or is invisible due to being dived) on the map (Humans) - AIs are cheating gits.
08025CC8 - Attempts to create a unit at the input grid co-ordinates (r0 = x, r1 = y, r2 = UID)
08025E08 - Costs for unit bought
08025EC0 - Compares if bit 0x8 of the current unit is set. If it isn't, it 
08025F8A - Appears to check whether there is a transport pointer at all (Eg, can it load units at all) then checks if that unit that is attempted to be loaded is allowed. Then checks the capacity of the transport (Can it carry 2? Can it carry 1?)
08026016 - Checks if two units can be joined?
080261E8 - Checks whether Neotanks are unlocked. Checks game mode + state bits (input r0 = Army)
08026368 - Checks if Rank >999 Points
080263E0 - Calculation for the Speed Score
080263A4 - Speed Scoring Subroutine
08026424 - Power Scoring Subroutine
080264BC - Tech Scoring Subroutine
0802653A - Saves Speed Score
08026548 - Saves Power Score
08026556 - Saves Technique Score
08026604 - Compares days to victory to speed score?
080266DC - Checks whether current player (P1-4) is active and is alive. Returns 1 if true, 0 if false.
08026F04 - Loads a player's current income and adds it to the player's current funds
08027078 - Checks whether Fog of War is present, then checks to see if a unit has a transport pointer to show the "may have loaded units" icon
08027658 - Draws the CO/CO Power/Funds Combobox in the Main Game Window
080267AC - Generates a list of properties that can be built from by the player
0802AA78 - Draws the Property Count/Capture Limit OAM
08029AF8 - Repairs Units (Input of Unit to repair in r0, r4, Repair amount r1)
08029CB8 - Animates Supply? (0802A182)
0802AEA6 - Loads current fuel for overlay
0802ba40 - Affects whether a unit appears dived in the info window.

0802CC90 - Menu Item Visibility Check - Checks if a unit is a Sub (0x18)

0802DCE8 - Controls input for Main game screen

08034142 - Controls input for Link Menu?
08034780 - Sets the default rules (Used for War Room, used to clear after a campaign map)
080346FC - Clears RAM after a campaign map completion
080348B4 - Checks if Fog of War is on, if true displays the "Country Name, Press A!" screen

08034F7C - Increments 0x030030F0
08034F8C - Decrements 0x030030F0

08035030 - Loads terrain palettes for Fog
08035064 - Code that retrieves the Sound Effects for weather change IDs
08035144 - Changes current game weather. r0 = Weather ID
08035170 - Random Weather subroutine
08035490 - Calculates chance of random weathers on game setup
080354FC - Loads weather data (OBJ Tile, XY positioning, etc)
08035F5E - Routine that loads the sound ID for a moving unit

0803678C - Subroutine for fuel/ammo graphics updates. Updates on Frame 0, 20, 40

08036D1C - Start of game's THUMB Code here
08036E18 - Subroutine that checks whether A, B Start Select is pressed and performs a soft reset.

08037D80 - Calculates Rank in Campaign/War Room (S-C)
08037DA4 - Obtains ranking on a score for Campaign (199, 249, 279) (C = 2, B = 3, A = 4, S = 5)

08038368 - Finds an open entry in the current campaign run score table (0x0200C458). Checks whether the day count is >0 and then saves the currently completed map's score
08038484 - Manages map clears. Checks the winning player, gets the campaign map ID, calculates the scores
0803861C - Checks whether the winning player is alive and on the correct team
0803866C - Checks game mode and whether Hard Campaign is on

08039A5C - Input: r0 = Graphic pointer r1 = Palette Pointer r2 = Graphic Length? r3 = Palette Slot?

0803B48C - Music/SFX player subroutine

0803b5E8  -  Title Screen
0803C010 - Reads value for set weather option?
0803C264 - Sets up weather settings from Menu
0803c4cc - checks if HC has been completed

0803C70C - Routine for initial save variables
0803C7A0 - Compares the return on the result of whether the map has already been bought
0803CA54 - Checks if a map has been unlocked. r0 = Map ID
0803CBD8 - Used to check campaign completion status for battle maps/main menu items

0803E088 - Initialise Black Hole Inventions on Map Start

080402B4 - Subroutine that changes Tile Type Map (0201F882) after a pipe seam is destroyed. Input: r0 = x-coord, r1 = y-coord
080409E8 - Subroutine that performs the animation to Capture
08041FE0 - Seems to collect what B-button style is used (indirect or direct)
0804151C - Menu Visibility Check - Compares unit ID is 0x2 or Less (infantry or mech), for Capt Command
08041776 - Menu Visibility Check - Compares unit ID is 0x2 or Less (infantry or mech), for Launch Silo Command
0804203C - Collects min/max ranges
08042084 - Gathers a unit's Supplying ability

0804224C - Appears to check if unloading is allowed.
080422A8 - Gathers whether a unit is on the same tile (so can dive)

08042314 - Checks whether loading is allowed on this terrain
0804247C - Checks whether Silo use is allowed on this terrain
08042998 - Join Units Subroutine
080424BC - Checks whether unit is currently on the same tile it started at (Capture function)

08042C9C - Gathers Price multipliers of CO
08042D84 - Gathers Vision Total of CO
08042E2C - Gathers Luck Total of CO
08042E84 - Gathers Negative Luck Total of CO
08042FC4 - Gathers Counterattack Bonus Total of CO

08042D1C - Collects Mov Range + CO Boosts
08042D50 - Collects Max Firing Range + CO Boosts
08043086 - (Damage Formula) - Determines what stat boosts a unit gets. Only runs for active player.
080430B0 - Attack Value of CO
08043120 - Defence Value of CO
08043190 - Movement Bonus of CO
08043200 - Range Bonus of CO
08043270 - Gathers Cost Bonus of CO. Input of CO ID, Power Status and Unit ID. Outputs cost bonuses in r0
080432A8 - Gathers vision bonus of CO
080433D8 - Subroutine that gets the unit's base cost.
0804365C - Checks whether there is a Day Limit and draws "Days Remaining"
080436DC - Draws the combined CO Power State/Funds/Charge/CO Face panel - Input: r0 = x, r1 = y
08043A80 - Grabs CO Power Animation Pointer Return: Graphic Pointer - Input: r0 = ID
08043A90 - Grabs CO Power Animation Palette Pointer Return: Graphic Pointer - Input r0 = ID
08043B60 - Draws the CO's Name
0804402C - Draws the CO's larger wide face image
08044144 - Sets CO Power/Super CO Power Status
08044178 - Clears CO Power/Super CO Power Status
0804428C - Runs a check to see if a COP/SCOP is active. If it is, disable activation of SCOP (Skip the next check and set 0x0)
080442AC - Checks whether CO Power is available - Returns 1 if true
0804429E - Runs a check, set r0, 0x0 if no SCOP available (Powers active/No charge). 0x1 if SCOP is available.
08044408 - Animation Check - Returns 0x1 (Andy/Jess)
0804440C - Animation Check - Returns 0x1 if the unit is a Direct (Max)
0804443C - Animation Check - Returns 0x1 if the Unit has Max Range >1 (Grit)
08044470 - Animation Check - Returns 0x1 if the Unit class is a Foot Soldier (Sami)
08044498 - Animation Check - Returns 0x1 if the Unit class is Copter or Plane (Eagle COP)
08044AB8 - Returns ??? - Input: r0 = Player ID
080444B4 - Animation Check - Returns 0x1 if the Unit is in wait mode but not Foot Soldier, or Unit class is Copter or plane (Eagle SCOP)
080444EC - COP Animation - Heals unit 2 HP (Hyper Repair)
080444FC - COP Animation - Heals unit 5 HP (Hyper Upgrade)
0804450A - COP Animation - Unset Wait
08044516 - COP Animation - Restores unit's ammo and fuel to maximum value (Turbo Charge/Overdrive)
08044610 - Animate CO Power on a unit (Standard type CO Powers)
08044B08 - Animates unit creation for Unit Creation CO Powers (r0 = x, r1 = y, r2 = COP/SCOP mode)


08045478 - Script - 
080457D1 - Input of Invention 0x5 (Deathray). Runs 0x0803E388 to see if alive. Returns 1 if one is alive, 0 if all dead
080457E9 - Input of Invention 0x1 (Laser). Rest as Deathray
08045801 - Input of Invention 0x3 (Black Cannon). Rest as Deathray
08045819 - Input of Invention 0x4 (Minicannon). Rest as Deathray
08045831 - Runs subroutine 0x08045650 which checks the map to see if pipe seams are present. Returns 1 if alive, 0 if dead.
08045848 - Checks if the 75th Tile on the map is owned by P1 (OS Lab Map Found)
080458F9 - Checks if the 180th Tile on the Map is owned by P1 (GE Lab Map Found)
08042559 - Checks all of P1's units to see how many units have fuel. If the number of units with fuel is 0 returns 1, otherwise returns 0.
08045D10 - Checks if P2 has at least one battleship. Returns 0 if true, 1 if false.
080449AC - Subroutine that applies the Meteor Strike Damage.
080449C0 - Sets up targeting for Meteor Strike:

08046778 - Sets up movement cost display for the R-Info window. Input: r0 = Left/Right side (0x0 or 0x80) r1 = Terrain Type

08048A32 - Routine that loads points for display in the battle maps menu - Seems to be held at 02017C50 when in use?
080487B4 - Seems to load the cost of items in Battle Maps, the text ID used to display and what icon is used.

08057FA8 - AI: How many of a unit class are present. (Input of r0 = Unit class)

08058A5C - Branch where calculates the maximum counterattack AI is willing to take
0805926C - AI: Branch which calculates the minimum damage the AI is willing to do


0805C1C5 - Start of Turn (03004770 = 0x1)
0805C209 - COP Check: If units are injured
0805C1D9 - COP Check: Is it the Start of the Turn? Start (COP), End (SCOP)
0805C1C1 - COP Check: Start and End of Turn (Always)
0805C269 - COP Check: If not snowing
0805CAA6 - AI: Checks a built unit's AI type (+0x1B) in the unit data and compares to 0x1 (infantry?)
0805ECD8 - AI:  Do Nothing with this unit 0x0
0805ECDC - AI: Aggressively Charge 0x1
0805ED70 - AI: Move with front line 0x2
0805EE40 - AI: Control method (Unknown) 0x3
0805EF9C - AI: Control Method (Unknown) 0x4
0805F074 - AI: Move up conservatively 0x5
0805F0EC - AI: Control Method (Unknown) 0x6
0805F2B4 - AI: Protect the HQ 0x7


0805FC78 - Checks transport pointer, then checks whether a unit can be loaded on the tile. Does a Compare based on Unit ID whether it can be loaded. :/

080607B4 - AI: What unit is built next?
08060894 - AI: Subroutine used for deciding if CO has enough Inf?
0806096C - AI: Whether to build a T-Copter?
080609B8 - AI: Whether to build an APC?
08060A20 - AI: Whether to build a Lander?
08060D4C - AI: Subroutine used for deciding what to build next, provided inf and transports are built.

08060DAC - AI: Calculates which properties the AI can build from. Uses 08042424 to calculate and thus Hachi can't use SCOP build as an AI.
08060ED4 - What properties can be built from for this unit type? 2 = Land, 4 = Air  6 = Sea
08060F00 - Determines what units the AI Can Build and calculates priority based on how many are already built. 
08061178 - Obtains a Random number and then uses the weightings (Unit 0x5 to 0x9) to determine a pointer to follow.
Related to the build subroutine for AIs at 080607BC
080612E8 - AI: Marks a property of being used with 0xFE
08061788 - Saves and loads a crapload of data based on the AI type for a map.
08061868 - Overarching AI Control Subroutine
08061CDC - AI: Seems to blank word aligned bytes at around 03004100, 0x5B times
08061CF8 - AI: Seems to compare the AI player's alliances
08061F34 - AI: Subroutine that calculates what properties exist to build transport types (list at 085767F2)


08062964 - AI: Seems to compare how much damage will be done to a target
08062988 - AI: If the unit can counterattack?

08064788 - Routine that handles the graphics of the weather tab?
08066BF4 - Keypad handler for rules setup menu
0806757A - Checks whether Start/A have been pressed for the intro movie.  If pressed, branches to 0803b5E8 which launches the title screen.
0806A7B4 - Subroutine for meteor size scaling?

0806C9D8 - Code for checking until title screen reset.
0806CA06 - Title screen input handler - Starts main menu if a button is pressed.

0806f0f6 - Controls input for Sound Room

08070478 - Routine that takes Music/Sound ID and activates it?

08072C44 - Updates the scrolling for Campaign World Map
08072F04 - Appears to be the keypad handler for the main menu?

080745A9 - Input of Player 1, runs subroutine 0x08044094 (Checks if COP Charge > 0)
08074598 - Input of Player 1, Checks if P1's CO Power is ready (Input of 0x1), runs subroutine 0x084423C (Check COP Ready - Standard)

0807821C - Input: r0 = Campaign map ID, Loads the Flag Type (+0x2) from the campaign map header
0807823C - Input: r0 = Campaign map ID, No Operation subroutine (bx r14)

080785FC - Clears 0x03005944 (How many armies there are)

08078791 - Setup CO Select List for Campaign Mission (Liberation)
080787A5 - Setup CO Select List for Campaign Mission (Neotanks BM)
080787B9 - Setup CO Select List for Campaign Mission (Factory Blues)
080787ED - Setup CO Select List for Campaign Mission (Neotanks YC)
08078801 - Setup CO Select List for Campaign Mission (Hunt's End)
08078835 - Setup CO Select List for Campaign Mission (Neotanks GE)
08078849 - Setup CO Select List for Campaign Mission (Great Sea Battle)
08078865 - Setup CO Select List for Campaign Mission (Hot Pursuit)
08078885 - Setup CO Select List for Campaign Mission (Final Front)
08078D84 - Loads map animation from background for CO Info screens?
08078E14 - Calculates campaign mission ID from map ID (sub 0x89)

0807A3AC - Subroutine that grabs the victory text IDs for a Campaign mission as well as standard victory. Input: r0 = Player, r1 = Mission number
0807A908 - 

0807DA98 - OAM Tile Drawing Routine for War Room CO Select

0807FE90 - Seems to be the COP BG Animation/Pal/etc. subroutine
0807FEAA - Updates the Alpha Trans. for COP
0807FFDA - Updates the BG0 Scrolling for COP splash

08080052 - Updates BG0 scrolling for COP (End)

08080E74 - Branches based on Power Mode Input (COP = 1, SCOP = 2) and executes the scripting for the mode if true

08082264 - Calculates what mode is being selected? (If Submenu)
0808455A - Updates the scrolling for scrollable maps (Title screen/Menu backgrounds?)
08084CB0 - Keypad handler for CO Dossier

08084DA2 - Checks CO ID for what name to load (CO Dossier) (Left only)

08085026 - Checks whether Page number ≥, Thus hiding CO Body Sprite in CO Dossier

08085410 - Routine that determines what icon to display for a given firepower value.
08085B0C - Initial Map Case for Vs (Done at bootup)

08085708 - Routine for drawing unit stats in CO Info

080860DC - Controls input for the War Room Screen
08087548 - Calculates which high score to show.
08087B60 - Subroutine that sets up display of Enemy CO Faces (Input of Cursor Position (0-30))
0808849E - Keypad handlers for CO Edit
080889BA - Keypad handlers for CO Edit
08088B64 - Keypad handlers for CO Edit

0808AAA0 - swi 0xE (BgAffineSet), returns with lr
0808AAA4 - swi 0xC (CpuFastSet), returns with lr
0808AAA8 - swi 0xB (CpuSet), returns with lr
0808AAAC - swi 0x6 (Div), returns with lr
0808AAB0 - swi 0x6 (Div), moves remainder into r0, returns with lr
0808AAB8 - swi 0x13 (HuffUnComp), returns with lr
0808AABC - swi 0x12 (LZ77UnCompVram), returns with lr
0808AAC0 - swi 0x11 (LZ77UnCompWram), returns with lr
0808AAC4 - sets r1 to 1 then swi 0x25 (MultiBoot), returns with lr
0808AACC - swi 0x15 (RLUnCompVram), returns with lr
0808AAD0 - swi 0x14 (RLUnCompWram), returns with lr

0808B6E8 - Subroutine that seems to copy loaded save data to RAM. Loads data from 0200002A and saves it to RAM.

0808BBBC - bx r0, input subroutine in r0
0808BBC0 - bx r1, input subroutine in r1
0808BBC4 - bx r2, input subroutine in r2
0808BBC8 - bx r3, input subroutine in r3
0808BBCC - bx r4, input subroutine in r4
0808BBD0 - bx r5, input subroutine in r5
0808BBD4 - bx r6, input subroutine in r6
0808BBD8 - bx r7, input subroutine in r7
0808BBDC - bx r8, input subroutine in r8
0808BBE0 - bx r9, input subroutine in r9
0808BBE4 - bx r10, input subroutine in r10
0808BBE8 - bx r11, input subroutine in r11
0808BBEC - bx r12, input subroutine in r12
0808BBF0 - bx r13, input subroutine in r13
0808BBF4 - bx r14, input subroutine in r14

0808BBF8 - Custom Division subroutine, avoids div0 errors. Input r0 = numerator, r1 = denominator

08488494 - Design Maps Load Menu Options
0849ABC0 - Intel Submenu Options Controls
0849AC60 - Options Submenu Options Controls


085D3DD0 - Routine that checks unit allegiance type/HQ type
